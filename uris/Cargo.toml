[package]
name = "ftml-uris"
version = "0.0.1"
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[lints]
workspace = true

[[bench]]
name = "uri_benchmarks"
harness = false

[[bench]]
name = "interning_benchmarks"
harness = false


[features]
## Adds [`Serialize`](serde::Serialize) and [`Deserialize`](serde::Deserialize)
## to all types in this crate.
serde = [
    "dep:serde",
    "dep:serde_with",
    "url/serde",
    "arrayvec/serde",
    "openmath/serde",
]
## Generates typescript exports for `wasm-pack`; [`Uri`](crate::Uri)s are all
## bound to `string`, but naming still allows to make intentions in APIs explicit.
typescript = ["serde", "dep:wasm-bindgen"]
## Adds the [`components`](crate::components) module
components = []
## Implements [`UriComponentsTrait`](crate::components::UriComponentsTrait) for
## [`ParamsMap`](leptos_router::params::ParamsMap)
leptos = ["components", "dep:leptos_router", "serde"]
## implements [`ValueDeserialize`](tantivy::schema::document::ValueDeserialize) for some URIs.
tantivy = ["dep:tantivy"]
## implements [`AsOMS`](openmath::ser::AsOMS) for [`SymbolUri`](crate::SymbolUri) and
## [`DocumentElementUri`](crate::DocumentElementUri)
openmath = ["dep:openmath"]
## interns Uris for deduplication, reduced memory usage and faster equality checks.
interned = []

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
    "-Zunstable-options",
    "-Zrustdoc-scrape-examples",
    "--all-features",
    "--generate-link-to-definition",
    "--html-in-header",
    "doc/katex-header.html",
    "--html-in-header",
    "doc/docs.html",
]
# cargo +nightly doc --no-deps --all-features --release --open

[build-dependencies]
rustc_version = { workspace = true }

[dev-dependencies]
tracing-subscriber = { workspace = true }
tracing = { workspace = true }
serde_json = { workspace = true }
rstest = { workspace = true }
criterion = { workspace = true }
server_fn_macro_default = { workspace = true }
server_fn = { workspace = true, features = ["browser"] }

[dependencies]
url = { workspace = true }
strumbra = { workspace = true }
rustc-hash = { workspace = true }
either = { workspace = true }
#smallvec = { workspace = true }
triomphe = { workspace = true }
parking_lot = { workspace = true }
dashmap = { workspace = true }
const_format = { workspace = true }
impl-tools = { workspace = true }
thiserror = { workspace = true }
arrayvec = { workspace = true }
strum = { workspace = true }
document-features = { workspace = true }

serde_with = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
leptos_router = { workspace = true, optional = true }
tantivy = { workspace = true, optional = true }
openmath = { workspace = true, optional = true }
