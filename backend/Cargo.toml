[package]
name = "ftml-backend"
version = "0.0.1"
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[lints]
workspace = true

[features]
## provides adapters for leptos server functions
server_fn = ["dep:server_fn", "dep:serde_json"]

wasm = [
    "dep:wasm-bindgen",
    "ftml-ontology/wasm",
    "dep:reqwasm",
    "dep:send_wrapper",
]
## Generates typescript exports for `wasm-pack`; [`Uri`](crate::Uri)s are all
## bound to `string`, but naming still allows to make intentions in APIs explicit.
typescript = ["wasm", "dep:tsify-next", "ftml-ontology/typescript"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
    "-Zunstable-options",
    "--generate-link-to-definition",
    "--html-in-header",
    "doc/katex-header.html",
    "--html-in-header",
    "doc/docs.html",
]
# cargo +nightly doc --no-deps --all-features --release --open

[build-dependencies]
rustc_version = { workspace = true }

[dev-dependencies]
tracing-subscriber = { workspace = true }
rstest = { workspace = true }
criterion = { workspace = true }

[dependencies]
document-features = { workspace = true }

thiserror = { workspace = true }
serde = { workspace = true }
urlencoding = { workspace = true }
futures-util = { workspace = true }

ftml-uris = { workspace = true, features = ["serde", "components"] }
ftml-ontology = { workspace = true, features = ["serde"] }

server_fn = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
tsify-next = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
reqwasm = { workspace = true, optional = true }
send_wrapper = { workspace = true, optional = true }
