[package]
name = "ftml-backend"
version = "0.0.1"
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[lints]
workspace = true

[features]
## provides adapters for leptos server functions
server_fn = ["dep:server_fn"]
## webassembly support via reqwasm
wasm = [
    "dep:wasm-bindgen",
    "ftml-ontology/wasm",
    "dep:reqwasm",
    "dep:send_wrapper",
]
## reqwest
reqwest = ["dep:reqwest"]
## cached
cached = ["dep:dashmap", "dep:parking_lot", "dep:kanal", "dep:rustc-hash"]
## Generates typescript exports for `wasm-pack`
typescript = ["wasm", "dep:tsify", "ftml-ontology/typescript"]
## Adds memory monitoring for cached backends
deepsize = ["cached", "ftml-ontology/deepsize", "dep:bytesize", "dep:deepsize"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
    "-Zunstable-options",
    "--generate-link-to-definition",
    "--html-in-header",
    "doc/katex-header.html",
    "--html-in-header",
    "doc/docs.html",
]
# cargo +nightly doc --no-deps --all-features --release --open

[build-dependencies]
rustc_version = { workspace = true }

[dev-dependencies]
#tracing-subscriber = { workspace = true }
#rstest = { workspace = true }
#criterion = { workspace = true }

[dependencies]
document-features = { workspace = true }

thiserror = { workspace = true }
serde = { workspace = true }
urlencoding = { workspace = true }
futures-util = { workspace = true }
either = { workspace = true }
serde_json = { workspace = true }
# tracing = { workspace = true }

ftml-uris = { workspace = true, features = ["serde", "components"] }
ftml-ontology = { workspace = true, features = ["serde"] }

reqwest = { workspace = true, optional = true, features = ["json"] }
server_fn = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
tsify = { workspace = true, optional = true }
reqwasm = { workspace = true, optional = true }
send_wrapper = { workspace = true, optional = true }
dashmap = { workspace = true, optional = true }
parking_lot = { workspace = true, optional = true }
kanal = { workspace = true, optional = true }
bytesize = { workspace = true, optional = true }
deepsize = { workspace = true, optional = true }
rustc-hash = { workspace = true, optional = true }
